#!/usr/bin/env python

Import('env')
Import('env_modules')

env_tensorflow = env_modules.Clone()
env_tensorflow.disable_warnings()
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/allocation.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/arena_planner.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/context.c")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/error_reporter.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/graph_info.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/interpreter.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/model.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/nnapi_delegate.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/optional_debug_tools.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/simple_memory_arena.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/string_util.cc")
env_tensorflow.add_source_files(env.modules_sources, '#thirdparty/tensorflow/tensorflow/lite/downloads/src/farmhash.cc')
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/activations.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/add.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/basic_rnn.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/batch_to_space_nd.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/bidirectional_sequence_lstm.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/bidirectional_sequence_rnn.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/concatenation.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/conv.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/depthwise_conv.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/div.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/embedding_lookup.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/embedding_lookup_sparse.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/exp.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/fully_connected.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/gather.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/gemm_support.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/hashtable_lookup.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/internal/kernel_utils.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/internal/optimized/neon_tensor_utils.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/internal/quantization_util.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/internal/reference/portable_tensor_utils.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/internal/tensor_utils.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/kernel_util.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/l2norm.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/local_response_norm.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/lsh_projection.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/lstm.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/mean.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/mul.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/pad.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/pooling.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/register.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/reshape.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/resize_bilinear.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/skip_gram.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/space_to_batch_nd.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/space_to_depth.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/split.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/squeeze.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/strided_slice.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/sub.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/svdf.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/topk_v2.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/transpose.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/unidirectional_sequence_lstm.cc")
env_tensorflow.add_source_files(env.modules_sources, "#thirdparty/tensorflow/tensorflow/lite/kernels/unidirectional_sequence_rnn.cc")
env_tensorflow.Append(CPPPATH=['.'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/kernels/'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/c/'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/tensorflow/downloads/flatbuffers/include/'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/tensorflow/downloads/'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/tensorflow/downloads/eigen'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/tensorflow/downloads/gemmlowp'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/tensorflow/downloads/neon_2_sse'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/tensorflow/lite/tensorflow/downloads/farmhash/src'])
env_tensorflow.Append(CPPPATH=['thirdparty/tensorflow/gen/obj'])

#if (not env.msvc):
#    env_tensorflow.Append(CXXFLAGS="-std=c++11")

#env_assimp.Append(CPPFLAGS=['-DTENSORFLOW_TEST'])

# Godot's own source files
env_tensorflow.add_source_files(env.modules_sources, "*.cpp")
